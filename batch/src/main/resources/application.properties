# ------------ HIBERNATE & JPA ------------------- #

spring.datasource.url=jdbc:postgresql://localhost:5432/govhub-remote
spring.datasource.username=govhub
spring.datasource.password=govhub
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true


# ------------ LOGGING -------------------

spring.jpa.hibernate.show-sql=true

logging.file.name=/var/log/govhub/govio-planner.log
logging.level.root=error
logging.level.org.springframework.web=info
logging.level.org.hibernate=info
logging.level.it.govio.batch=DEBUG
logging.logback.rollingpolicy.max-history=10

# ----------- SPRING BATCH ------------ #

# Il job non viene eseguito automaticamente in fase di startup
spring.batch.job.enabled=false

# -------------- BUSINESS LOGIC PROPERTIES  ---------------- #


# Lista che indica quanti giorni prima e dopo la scadenza bisogna notificare il cittadino. 
planner.ntfy.policy=90,60,30,7,-1

# Formato della data in cui e girato il batch per l'ultima volta
planner.ntfy.formatLastNotify=yyyy-MM-dd

# Quando il batch si avvia, parte dalla data di ultima esecuzione e da li elabora i files. La prima volta che 
# si esegue non ha una data di riferimento e usa la seguente proprieta la stabilisce. (Serve davvero?)
planner.ntfy.min-last-date=1970-01-01

# Numero di ore di ritardo per l'orario di spedizione rispetto al default(12:00)
planner.ntfy.date-time=

# Path per i file generati dal batch e da spedire a GovIO
planner.ntfy.csv-dir=/var/govio-planner/ntfy-files/

# Path dove trovare i file caricati con le scadenze delle carte d'identita
planner.exp.csv-dir=/var/govio-planner/exp-files/

# Formato delle date di scadenza della carta di identita
planner.ntfy.formatDueDate=dd/MM/yyyy

# Formato della data e orario di spedizione
planner.ntfy.formatExpeditionDate=uuuu-MM-dd'T'HH:mm:ss
