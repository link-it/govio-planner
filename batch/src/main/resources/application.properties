spring.batch.job.enabled=false

spring.h2.console.enabled=true
spring.h2.console.web-allow-others=true
spring.h2.console.trace=false

spring.batch.job.enabled=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.jpa.generate-ddl=true

spring.datasource.url=jdbc:postgresql://localhost:5432/govhub-remote
spring.datasource.username=govhub
spring.datasource.password=govhub
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true

spring.main.banner-mode=off


# Scheduling del batch
planner.ntfy.schedule.time=0 0 */1 * * *

planner.ntfy.schedule.zone=GMT+01:00

# Path per i file generati dal test e dove si trovano i file con il risultato atteso dei test
planner.ntfy.csv-dir=${user.dir}/src/test/resources/

# Path dove trovare i file caricati con le scadenze delle carte d'identita per i test
planner.exp.csv-dir=${user.dir}/src/test/resources/

# Quando il batch si avvia, parte dalla data di ultima esecuzione e da li elabora i files. La prima volta che 
# si esegue non ha una data di riferimento e usa la seguente proprieta la stabilisce. (Serve davvero?)
planner.ntfy.min-last-date=1970-01-01

# Numero di ore di ritardo della spedizione rispetto a quando ha girato il batch
planner.ntfy.date-time=

# Lista che indica quanti giorni prima e dopo la scadenza bisogna notificare il cittadino. 
planner.ntfy.policy=90,60,30,7,-1

# Formato della data in cui e girato il batch per l'ultima volta
planner.ntfy.formatLastNotify=yyyy-MM-dd

# Formato delle date di scadenza della carta di identita
planner.ntfy.formatDueDate=dd/MM/yyyy

# Formato della data e orario di spedizione
planner.ntfy.formatExpeditionDate=uuuu-MM-dd'T'HH:mm:ss

               
#logging.level.it.govhub.govio.planner.batch=DEBUG
#logging.level.it.govhub.govio.govio.batch.test.batch=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.SQL=ERROR
#spring.jpa.show-sql=true